<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- <data noupdate="1"> -->
    <data>

        <record id="estate_property_big_villa" model="estate.property">
            <field name="name">Big Villa</field>
            <field name="state">new</field>
            <field name="description">A nice and big villa</field>
            <field name="postcode">12345</field>
            <field name="date_availability">2020-02-02</field>
            <field name="expected_price">1600000</field>
            <field name="bedrooms">6</field>
            <field name="living_area">200</field>
            <field name="facades">4</field>
            <field name="garage">True</field>
            <field name="garden">True</field>
            <field name="garden_area">1000</field>
            <field name="garden_orientation">south</field>
            <field name="property_type_id" ref="estate_property_type_data_villa" />
            <field name="property_tag_ids" eval="[
                Command.create({
                    'name': 'Big',
                    'color': 3,
                }),
                Command.create({
                    'name': 'New',
                    'color': 4,
                }),
            ]" />
        </record>

        <record id="estate_property_trailer_home" model="estate.property">
            <field name="name">Trailer home</field>
            <field name="state">canceled</field>
            <field name="description">Home in a trailer park</field>
            <field name="postcode">54321</field>
            <field name="date_availability">1970-01-01</field>
            <field name="expected_price">100000</field>
            <field name="selling_price">120000</field>
            <field name="bedrooms">1</field>
            <field name="living_area">10</field>
            <field name="facades">4</field>
            <field name="garage">False</field>
            <field name="property_type_id" ref="estate_property_type_data_house" />
            <field name="property_tag_ids" eval="[
                Command.create({
                    'name': 'Old building',
                    'color': 5,
                }),
                Command.create({
                    'name': 'Single floor',
                    'color': 1,
                }),
            ]" />
        </record>

        <record id="estate_property_offer_1" model="estate.property.offer">
            <field name="create_date" eval="datetime.now()" />
            <field name="price">10000</field>
            <field name="validity">14</field>
            <field name="partner_id" ref="base.res_partner_12" />
            <field name="property_id" ref="estate.estate_property_big_villa" />
        </record>

        <record id="estate_property_offer_2" model="estate.property.offer">
            <field name="create_date" eval="datetime.now()" />
            <field name="price">1500000</field>
            <field name="validity">14</field>
            <field name="partner_id" ref="base.res_partner_12" />
            <field name="property_id" ref="estate.estate_property_big_villa" />
        </record>

        <record id="estate_property_offer_3" model="estate.property.offer">
            <field name="create_date" eval="datetime.now()" />
            <field name="price">1520000</field>
            <field name="validity">14</field>
            <field name="partner_id" ref="base.res_partner_2" />
            <field name="property_id" ref="estate.estate_property_big_villa" />
        </record>

        <function model="estate.property.offer" name="reject">
            <value eval="[ref('estate_property_offer_1')]"/>
        </function>

        <function model="estate.property.offer" name="reject">
            <value eval="[ref('estate_property_offer_2')]"/>
        </function>

        <function model="estate.property.offer" name="accept">
            <value eval="[ref('estate_property_offer_3')]"/>
        </function>


        <!-- Create a new Property while instanciating offers directly using the Command function -->
        <record id="estate_property_restaurant" model="estate.property">
            <field name="name">Restaurant</field>
            <field name="state">new</field>
            <field name="description">A beautiful restaurant in the chinese downtown.</field>
            <field name="postcode">53321</field>
            <field name="date_availability">2023-04-01</field>
            <field name="expected_price">2500000</field>
            <field name="bedrooms">0</field>
            <field name="living_area">240</field>
            <field name="facades">3</field>
            <field name="garage">True</field>
            <field name="property_type_id" ref="estate_property_type_data_commercial" />
            <field name="offer_ids" eval="[
                Command.create({
                    'price': 1200000,
                    'validity': 7,
                    'partner_id': ref('base.res_partner_2'),
                }),
                Command.create({
                    'price': 1500000,
                    'validity': 10,
                    'partner_id': ref('base.res_partner_12'),
                }),
                Command.create({
                    'price': 2200000,
                    'validity': 14,
                    'partner_id': ref('base.res_partner_1'),
                }),
                Command.create({
                    'price': 2800000,
                    'validity': 15,
                    'partner_id': ref('base.res_partner_18'),
                }),
            ]" />
        </record>

        <!-- <function model="estate.property.offer" name="reject">
            <value search="[
                ('property_id', '=', ref('estate_property_restaurant')),
                ('validity', '=', 7),
            ]"/>
        </function>

        <function model="estate.property.offer" name="reject">
            <value search="[
                ('property_id', '=', ref('estate_property_restaurant')),
                ('validity', '=', 10),
            ]"/>
        </function>

        <function model="estate.property.offer" name="reject">
            <value search="[
                ('property_id', '=', ref('estate_property_restaurant')),
                ('validity', '=', 14),
            ]"/>
        </function>

        <function model="estate.property.offer" name="accept">
            <value search="[
                ('property_id', '=', ref('estate_property_restaurant')),
                ('validity', '=', 15),
            ]"/>
        </function> -->

    </data>
</odoo>
